// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing Components Calculator.js 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="d-flex w-100 justify-content-evenly"
      >
        <div
          class="mt-5 w-50 px-5"
        >
          <h1>
            Let's do some Math's
          </h1>
        </div>
        <div
          class="d-flex justify-content-center w-50"
        >
          <div
            class="calculator mt-5"
          >
            <div
              class="result"
            >
              <span
                data-testid="result"
                id="result"
              >
                0
              </span>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="AC"
              >
                AC
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="+/-"
              >
                +/-
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="%"
              >
                %
              </button>
            </div>
            <div
              class="item operator"
            >
              <button
                type="button"
                value="รท"
              >
                รท
              </button>
            </div>
            <div
              class="item"
            >
              <button
                text="7"
                type="button"
                value="7"
              >
                7
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="8"
              >
                8
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="9"
              >
                9
              </button>
            </div>
            <div
              class="item operator"
            >
              <button
                type="button"
                value="x"
              >
                x
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="4"
              >
                4
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="5"
              >
                5
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="6"
              >
                6
              </button>
            </div>
            <div
              class="item operator"
            >
              <button
                type="button"
                value="-"
              >
                -
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="1"
              >
                1
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="2"
              >
                2
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="3"
              >
                3
              </button>
            </div>
            <div
              class="item operator"
            >
              <button
                type="button"
                value="+"
              >
                +
              </button>
            </div>
            <div
              class="item zero"
            >
              <button
                type="button"
                value="0"
              >
                0
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="."
              >
                .
              </button>
            </div>
            <div
              class="item operator"
            >
              <button
                type="button"
                value="="
              >
                =
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="d-flex w-100 justify-content-evenly"
    >
      <div
        class="mt-5 w-50 px-5"
      >
        <h1>
          Let's do some Math's
        </h1>
      </div>
      <div
        class="d-flex justify-content-center w-50"
      >
        <div
          class="calculator mt-5"
        >
          <div
            class="result"
          >
            <span
              data-testid="result"
              id="result"
            >
              0
            </span>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="AC"
            >
              AC
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="+/-"
            >
              +/-
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="%"
            >
              %
            </button>
          </div>
          <div
            class="item operator"
          >
            <button
              type="button"
              value="รท"
            >
              รท
            </button>
          </div>
          <div
            class="item"
          >
            <button
              text="7"
              type="button"
              value="7"
            >
              7
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="8"
            >
              8
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="9"
            >
              9
            </button>
          </div>
          <div
            class="item operator"
          >
            <button
              type="button"
              value="x"
            >
              x
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="4"
            >
              4
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="5"
            >
              5
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="6"
            >
              6
            </button>
          </div>
          <div
            class="item operator"
          >
            <button
              type="button"
              value="-"
            >
              -
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="1"
            >
              1
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="2"
            >
              2
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="3"
            >
              3
            </button>
          </div>
          <div
            class="item operator"
          >
            <button
              type="button"
              value="+"
            >
              +
            </button>
          </div>
          <div
            class="item zero"
          >
            <button
              type="button"
              value="0"
            >
              0
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="."
            >
              .
            </button>
          </div>
          <div
            class="item operator"
          >
            <button
              type="button"
              value="="
            >
              =
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Testing Components Home.js 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <article
        class="p-5"
      >
        <h1>
          Welcome to our page!
        </h1>
        <br />
        <p>
          Curabitur aliquet quam id dui posuere blandit. Curabitur arcu erat, accumsan id imperdiet et, porttitor at sem. Nulla porttitor accumsan tincidunt. Donec sollicitudin molestie malesuada. Sed porttitor lectus nibh. Nulla porttitor accumsan tincidunt. Praesent sapien massa, convallis a pellentesque nec, egestas non nis. Proin eget tortor risus. Curabitur aliquet quam id dui posuere blandit. Donec rutrum congue leo eget malesuada.
        </p>
        <p>
          Curabitur aliquet quam id dui posuere blandit. Curabitur arcu erat, accumsan id imperdiet et, porttitor at sem. Nulla porttitor accumsan tincidunt. Donec sollicitudin molestie malesuada. Sed porttitor lectus nibh. Nulla porttitor accumsan tincidunt. Praesent sapien massa, convallis a pellentesque nec, egestas non nis. Proin eget tortor risus. Curabitur aliquet quam id dui posuere blandit. Donec rutrum congue leo eget malesuada.
        </p>
      </article>
    </div>
  </body>,
  "container": <div>
    <article
      class="p-5"
    >
      <h1>
        Welcome to our page!
      </h1>
      <br />
      <p>
        Curabitur aliquet quam id dui posuere blandit. Curabitur arcu erat, accumsan id imperdiet et, porttitor at sem. Nulla porttitor accumsan tincidunt. Donec sollicitudin molestie malesuada. Sed porttitor lectus nibh. Nulla porttitor accumsan tincidunt. Praesent sapien massa, convallis a pellentesque nec, egestas non nis. Proin eget tortor risus. Curabitur aliquet quam id dui posuere blandit. Donec rutrum congue leo eget malesuada.
      </p>
      <p>
        Curabitur aliquet quam id dui posuere blandit. Curabitur arcu erat, accumsan id imperdiet et, porttitor at sem. Nulla porttitor accumsan tincidunt. Donec sollicitudin molestie malesuada. Sed porttitor lectus nibh. Nulla porttitor accumsan tincidunt. Praesent sapien massa, convallis a pellentesque nec, egestas non nis. Proin eget tortor risus. Curabitur aliquet quam id dui posuere blandit. Donec rutrum congue leo eget malesuada.
      </p>
    </article>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Testing Components Quote.js 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="d-flex justify-content-center p-5 m-5"
      >
        <p
          class="w-50 fs-5 fw-boldtext-align-center"
        >
          Loading...
        </p>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="d-flex justify-content-center p-5 m-5"
    >
      <p
        class="w-50 fs-5 fw-boldtext-align-center"
      >
        Loading...
      </p>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Testing Components testing Calculator.js 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="d-flex w-100 justify-content-evenly"
      >
        <div
          class="mt-5 w-50 px-5"
        >
          <h1>
            Let's do some Math's
          </h1>
        </div>
        <div
          class="d-flex justify-content-center w-50"
        >
          <div
            class="calculator mt-5"
          >
            <div
              class="result"
            >
              <span
                data-testid="result"
                id="result"
              >
                0
              </span>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="AC"
              >
                AC
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="+/-"
              >
                +/-
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="%"
              >
                %
              </button>
            </div>
            <div
              class="item operator"
            >
              <button
                type="button"
                value="รท"
              >
                รท
              </button>
            </div>
            <div
              class="item"
            >
              <button
                text="7"
                type="button"
                value="7"
              >
                7
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="8"
              >
                8
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="9"
              >
                9
              </button>
            </div>
            <div
              class="item operator"
            >
              <button
                type="button"
                value="x"
              >
                x
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="4"
              >
                4
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="5"
              >
                5
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="6"
              >
                6
              </button>
            </div>
            <div
              class="item operator"
            >
              <button
                type="button"
                value="-"
              >
                -
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="1"
              >
                1
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="2"
              >
                2
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="3"
              >
                3
              </button>
            </div>
            <div
              class="item operator"
            >
              <button
                type="button"
                value="+"
              >
                +
              </button>
            </div>
            <div
              class="item zero"
            >
              <button
                type="button"
                value="0"
              >
                0
              </button>
            </div>
            <div
              class="item"
            >
              <button
                type="button"
                value="."
              >
                .
              </button>
            </div>
            <div
              class="item operator"
            >
              <button
                type="button"
                value="="
              >
                =
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="d-flex w-100 justify-content-evenly"
    >
      <div
        class="mt-5 w-50 px-5"
      >
        <h1>
          Let's do some Math's
        </h1>
      </div>
      <div
        class="d-flex justify-content-center w-50"
      >
        <div
          class="calculator mt-5"
        >
          <div
            class="result"
          >
            <span
              data-testid="result"
              id="result"
            >
              0
            </span>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="AC"
            >
              AC
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="+/-"
            >
              +/-
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="%"
            >
              %
            </button>
          </div>
          <div
            class="item operator"
          >
            <button
              type="button"
              value="รท"
            >
              รท
            </button>
          </div>
          <div
            class="item"
          >
            <button
              text="7"
              type="button"
              value="7"
            >
              7
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="8"
            >
              8
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="9"
            >
              9
            </button>
          </div>
          <div
            class="item operator"
          >
            <button
              type="button"
              value="x"
            >
              x
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="4"
            >
              4
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="5"
            >
              5
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="6"
            >
              6
            </button>
          </div>
          <div
            class="item operator"
          >
            <button
              type="button"
              value="-"
            >
              -
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="1"
            >
              1
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="2"
            >
              2
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="3"
            >
              3
            </button>
          </div>
          <div
            class="item operator"
          >
            <button
              type="button"
              value="+"
            >
              +
            </button>
          </div>
          <div
            class="item zero"
          >
            <button
              type="button"
              value="0"
            >
              0
            </button>
          </div>
          <div
            class="item"
          >
            <button
              type="button"
              value="."
            >
              .
            </button>
          </div>
          <div
            class="item operator"
          >
            <button
              type="button"
              value="="
            >
              =
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Testing Components testing Home.js 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <article
        class="p-5"
      >
        <h1>
          Welcome to our page!
        </h1>
        <br />
        <p>
          Curabitur aliquet quam id dui posuere blandit. Curabitur arcu erat, accumsan id imperdiet et, porttitor at sem. Nulla porttitor accumsan tincidunt. Donec sollicitudin molestie malesuada. Sed porttitor lectus nibh. Nulla porttitor accumsan tincidunt. Praesent sapien massa, convallis a pellentesque nec, egestas non nis. Proin eget tortor risus. Curabitur aliquet quam id dui posuere blandit. Donec rutrum congue leo eget malesuada.
        </p>
        <p>
          Curabitur aliquet quam id dui posuere blandit. Curabitur arcu erat, accumsan id imperdiet et, porttitor at sem. Nulla porttitor accumsan tincidunt. Donec sollicitudin molestie malesuada. Sed porttitor lectus nibh. Nulla porttitor accumsan tincidunt. Praesent sapien massa, convallis a pellentesque nec, egestas non nis. Proin eget tortor risus. Curabitur aliquet quam id dui posuere blandit. Donec rutrum congue leo eget malesuada.
        </p>
      </article>
    </div>
  </body>,
  "container": <div>
    <article
      class="p-5"
    >
      <h1>
        Welcome to our page!
      </h1>
      <br />
      <p>
        Curabitur aliquet quam id dui posuere blandit. Curabitur arcu erat, accumsan id imperdiet et, porttitor at sem. Nulla porttitor accumsan tincidunt. Donec sollicitudin molestie malesuada. Sed porttitor lectus nibh. Nulla porttitor accumsan tincidunt. Praesent sapien massa, convallis a pellentesque nec, egestas non nis. Proin eget tortor risus. Curabitur aliquet quam id dui posuere blandit. Donec rutrum congue leo eget malesuada.
      </p>
      <p>
        Curabitur aliquet quam id dui posuere blandit. Curabitur arcu erat, accumsan id imperdiet et, porttitor at sem. Nulla porttitor accumsan tincidunt. Donec sollicitudin molestie malesuada. Sed porttitor lectus nibh. Nulla porttitor accumsan tincidunt. Praesent sapien massa, convallis a pellentesque nec, egestas non nis. Proin eget tortor risus. Curabitur aliquet quam id dui posuere blandit. Donec rutrum congue leo eget malesuada.
      </p>
    </article>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Testing Components testing Quote.js 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="d-flex justify-content-center p-5 m-5"
      >
        <p
          class="w-50 fs-5 fw-boldtext-align-center"
        >
          Loading...
        </p>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="d-flex justify-content-center p-5 m-5"
    >
      <p
        class="w-50 fs-5 fw-boldtext-align-center"
      >
        Loading...
      </p>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
